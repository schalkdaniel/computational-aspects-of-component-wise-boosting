==46767== Massif, a heap profiler
==46767== Copyright (C) 2003-2017, and GNU GPL'd, by Nicholas Nethercote
==46767== Using Valgrind-3.15.0-608cb11914-20190413X and LibVEX; rerun with -h for copyright info
==46767== Command: /usr/bin/rm -Rf /tmp/RtmpmReAKb
==46767== Parent PID: 46697
==46767== 
--46767-- 
--46767-- Valgrind options:
--46767--    --tool=massif
--46767--    --threshold=0
--46767--    --detailed-freq=1
--46767--    --time-unit=B
--46767--    --pages-as-heap=yes
--46767--    --verbose
--46767--    --trace-children=yes
--46767--    --massif-out-file=massif.out.n50000-p50-it400-bin2-rep1
--46767--    --log-file=log-cboost-n50000-p50-it400-bin2-rep1.txt
--46767-- Contents of /proc/version:
--46767--   Linux version 5.6.10-arch1-1 (linux@archlinux) (gcc version 9.3.0 (Arch Linux 9.3.0-1)) #1 SMP PREEMPT Sat, 02 May 2020 19:11:54 +0000
--46767-- 
--46767-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--46767-- Page sizes: currently 4096, max supported 4096
--46767-- Valgrind library directory: /usr/lib/valgrind
--46767-- Massif: alloc-fns:
--46767-- Massif:   malloc
--46767-- Massif:   __builtin_new
--46767-- Massif:   operator new(unsigned)
--46767-- Massif:   operator new(unsigned long)
--46767-- Massif:   __builtin_vec_new
--46767-- Massif:   operator new[](unsigned)
--46767-- Massif:   operator new[](unsigned long)
--46767-- Massif:   calloc
--46767-- Massif:   realloc
--46767-- Massif:   memalign
--46767-- Massif:   posix_memalign
--46767-- Massif:   valloc
--46767-- Massif:   operator new(unsigned, std::nothrow_t const&)
--46767-- Massif:   operator new[](unsigned, std::nothrow_t const&)
--46767-- Massif:   operator new(unsigned long, std::nothrow_t const&)
--46767-- Massif:   operator new[](unsigned long, std::nothrow_t const&)
--46767-- Massif: ignore-fns:
--46767-- Massif:   <empty>
--46767-- Reading syms from /usr/bin/rm
--46767--    object doesn't have a symbol table
--46767-- Reading syms from /usr/lib/ld-2.31.so
--46767-- Reading syms from /usr/lib/valgrind/massif-amd64-linux
--46767--    object doesn't have a dynamic symbol table
--46767-- Scheduler: using generic scheduler lock implementation.
==46767== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-46767-by-daniel-on-???
==46767== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-46767-by-daniel-on-???
==46767== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-46767-by-daniel-on-???
==46767== 
==46767== TO CONTROL THIS PROCESS USING vgdb (which you probably
==46767== don't want to do, unless you know exactly what you're doing,
==46767== or are doing some strange experiment):
==46767==   /usr/lib/valgrind/../../bin/vgdb --pid=46767 ...command...
==46767== 
==46767== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==46767==   /path/to/gdb /usr/bin/rm
==46767== and then give GDB the following command
==46767==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=46767
==46767== --pid is optional if only one valgrind process is running
==46767== 
--46767-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--46767-- Reading syms from /usr/lib/libc-2.31.so
==46767== 
